name: Android Build APK
on:
  push:
    branches:
      - main
    tags:
      - 'v0.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java (Gradle cache)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Ensure gradlew is executable
        run: chmod +x ./gradlew

      - name: Build APK(s) for app module
        run: |
          echo "Building app module APK(s)..."
          ./gradlew :app:assembleRelease || true
          ./gradlew :app:assembleDebug

      - name: Select main APK
        run: |
          mkdir -p release
          # Prefer release APK if it exists
          RELEASE_APK=$(find app/build/outputs/apk/release -type f -name "*release.apk" | head -n 1)
          if [ -n "$RELEASE_APK" ]; then
            echo "Using release APK: $RELEASE_APK"
            cp "$RELEASE_APK" release/app.apk
          else
            DEBUG_APK=$(find app/build/outputs/apk/debug -type f -name "*debug.apk" | head -n 1)
            echo "Release APK not found. Using debug APK: $DEBUG_APK"
            cp "$DEBUG_APK" release/app.apk
          fi
          ls -la release

      - name: Make a zip for easy sideloading
        run: |
          rm -f app-release.zip || true
          cd release
          zip -r ../app-release.zip app.apk
          cd ..
          echo "Created app-release.zip with contents:"
          unzip -l app-release.zip

      - name: Upload zipped release artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-zip
          path: app-release.zip

      - name: Create GitHub Release and attach zip (only for tag runs)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: app-release.zip
          prerelease: true
          draft: true
